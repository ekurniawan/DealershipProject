@page "/cars/{CarId:int}"
@using DealershipProject.Shared.Models
@using DealershipProject.Shared.Services
@inject ICarService CarService
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Car Details</PageTitle>

@if (!isAuthenticated)
{
    <div class="alert alert-warning" role="alert">
        <h4 class="alert-heading">Authentication Required</h4>
        <p>You need to login to view car details.</p>
        <hr>
        <a class="btn btn-primary" href="/login">Go to Login</a>
    </div>
}
else if (car == null)
{
    @if (isLoading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Car Not Found</h4>
            <p>The car with ID @CarId could not be found.</p>
            <hr>
            <a class="btn btn-primary" href="/cars">Back to Cars List</a>
        </div>
    }
}
else
{
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Car Details</h1>
        <div>
            <button class="btn btn-outline-primary me-2" @onclick="EditCar">
                <span class="bi bi-pencil" aria-hidden="true"></span> Edit
            </button>
            <button class="btn btn-outline-secondary" @onclick="BackToList">
                <span class="bi bi-arrow-left" aria-hidden="true"></span> Back to List
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">@car.Model</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <table class="table table-borderless">
                                <tbody>
                                    <tr>
                                        <td><strong>Car ID:</strong></td>
                                        <td>@car.CarId</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Model:</strong></td>
                                        <td>@car.Model</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Type:</strong></td>
                                        <td>
                                            <span class="badge bg-secondary">@car.Type</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Color:</strong></td>
                                        <td>
                                            <span class="badge bg-info text-dark">@car.Color</span>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-sm-6">
                            <table class="table table-borderless">
                                <tbody>
                                    <tr>
                                        <td><strong>Base Price:</strong></td>
                                        <td>
                                            <span class="h5 text-success">@car.BasePrice.ToString("C0")</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Stock:</strong></td>
                                        <td>
                                            <span class="badge @(car.Stock > 0 ? "bg-success" : "bg-danger") fs-6">
                                                @car.Stock @(car.Stock == 1 ? "unit" : "units")
                                            </span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Availability:</strong></td>
                                        <td>
                                            @if (car.Stock > 0)
                                            {
                                                <span class="text-success">
                                                    <span class="bi bi-check-circle-fill" aria-hidden="true"></span>
                                                    Available
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-danger">
                                                    <span class="bi bi-x-circle-fill" aria-hidden="true"></span>
                                                    Out of Stock
                                                </span>
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Quick Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button class="btn btn-primary" @onclick="EditCar">
                            <span class="bi bi-pencil" aria-hidden="true"></span> Edit Car
                        </button>
                        <button class="btn btn-outline-danger" @onclick="ShowDeleteConfirmation">
                            <span class="bi bi-trash" aria-hidden="true"></span> Delete Car
                        </button>
                        <hr />
                        <button class="btn btn-outline-secondary" @onclick="RefreshData">
                            <span class="bi bi-arrow-clockwise" aria-hidden="true"></span> Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Delete Confirmation Modal -->
@if (showDeleteModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeleteModal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this car? This action cannot be undone.</p>
                    @if (car != null)
                    {
                        <div class="alert alert-warning">
                            <strong>Car:</strong> @car.Model<br />
                            <strong>Type:</strong> @car.Type<br />
                            <strong>Price:</strong> @car.BasePrice.ToString("C0")
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="HandleDelete" disabled="@isDeleting">
                        @if (isDeleting)
                        {
                            <span class="spinner-border spinner-border-sm" role="status"></span>
                            <span>Deleting...</span>
                        }
                        else
                        {
                            <span>Delete</span>
                        }
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int CarId { get; set; }

    private Car? car;
    private bool isAuthenticated = false;
    private bool isLoading = true;
    private bool showDeleteModal = false;
    private bool isDeleting = false;

    protected override async Task OnInitializedAsync()
    {
        await CheckAuthenticationAndLoadData();
    }

    private async Task CheckAuthenticationAndLoadData()
    {
        var token = await AuthService.GetTokenAsync();
        isAuthenticated = !string.IsNullOrEmpty(token);

        if (isAuthenticated)
        {
            await LoadCar();
        }
        else
        {
            isLoading = false;
        }
    }

    private async Task LoadCar()
    {
        try
        {
            isLoading = true;
            car = await CarService.GetCarByIdAsync(CarId);
        }
        catch (Exception ex)
        {
            // Handle error
            Console.WriteLine($"Error loading car: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task RefreshData()
    {
        await LoadCar();
    }

    private void EditCar()
    {
        Navigation.NavigateTo($"/cars/edit/{CarId}");
    }

    private void BackToList()
    {
        Navigation.NavigateTo("/cars");
    }

    private void ShowDeleteConfirmation()
    {
        showDeleteModal = true;
    }

    private void CloseDeleteModal()
    {
        showDeleteModal = false;
    }

    private async Task HandleDelete()
    {
        if (car == null) return;

        try
        {
            isDeleting = true;
            var success = await CarService.DeleteCarAsync(car.CarId);

            if (success)
            {
                Navigation.NavigateTo("/cars");
            }
            else
            {
                // Handle error
                CloseDeleteModal();
            }
        }
        catch (Exception ex)
        {
            // Handle error
            Console.WriteLine($"Error deleting car: {ex.Message}");
            CloseDeleteModal();
        }
        finally
        {
            isDeleting = false;
        }
    }
}